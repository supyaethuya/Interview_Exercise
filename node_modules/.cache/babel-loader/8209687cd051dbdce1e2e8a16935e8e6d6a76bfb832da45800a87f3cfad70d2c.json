{"ast":null,"code":"var _jsxFileName = \"/Users/supyaethuya/Desktop/interview-app/src/Programs.js\",\n  _s = $RefreshSig$();\n// // src/components/Programs.js\n// import React, { useState } from 'react';\n// import Map from './Map';\n// import './App.css';\n\n// const Programs = ({ programs, onBack }) => {\n//   const [selectedLocation, setSelectedLocation] = useState(null);\n\n//   // Handler when a program is clicked – opens the map modal using its location data\n//   const handleProgramClick = (program) => {\n//     if (program.location && program.location.latitude && program.location.longitude) {\n//       setSelectedLocation(program.location);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={onBack} className=\"back-button\">Back to Topics</button>\n//       <div className=\"programs-container\">\n//         {programs.map(program => (\n//           <div \n//             className=\"program-card\" \n//             key={program.id} \n//             onClick={() => handleProgramClick(program)}\n//           >\n//             {program.cover_image && (\n//               <img src={program.cover_image} alt={program.title} className=\"program-image\" />\n//             )}\n//             <h3>{program.title}</h3>\n//             <p>{program.description}</p>\n//             <p><strong>Time:</strong> {program.start_time} - {program.end_time}</p>\n//             <p><strong>Location:</strong> {program.room}</p>\n//           </div>\n//         ))}\n//       </div>\n\n//       {selectedLocation && (\n//         <Map \n//           location={selectedLocation} \n//           onClose={() => setSelectedLocation(null)} \n//         />\n//       )}\n//     </div>\n//   );\n// };\n// src/components/Programs.js\nimport React, { useState } from 'react';\nimport Map from './Map';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Programs = ({\n  programs,\n  onBack\n}) => {\n  _s();\n  const [selectedLocation, setSelectedLocation] = useState(null);\n  const handleProgramClick = program => {\n    if (program.location && program.location.latitude && program.location.longitude) {\n      setSelectedLocation(program.location);\n    }\n  };\n\n  // Helper function to split a datetime string (\"YYYY-MM-DDTHH:MM:SS\")\n  // into { date: \"YYYY-MM-DD\", time: \"HH:MM\" }\n  const getDateAndTime = datetime => {\n    const [date, fullTime] = datetime.split('T');\n    const time = fullTime.slice(0, 5); // \"HH:MM\"\n    return {\n      date,\n      time\n    };\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: onBack,\n      className: \"back-button\",\n      children: \"Back to Topics\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"programs-container\",\n      children: programs.map(program => {\n        // Extract date and time from start_time and end_time.\n        // Since the date is the same, we only need one date.\n        const {\n          date: programDate,\n          time: startTime\n        } = getDateAndTime(program.start_time);\n        const {\n          time: endTime\n        } = getDateAndTime(program.end_time);\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"program-card\",\n          onClick: () => handleProgramClick(program),\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"program-text\",\n            children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n              children: program.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: program.description\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"program-info\",\n            children: [/*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Date:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 20\n              }, this), \" \", programDate]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Time:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 19\n              }, this), \" \", startTime, \" - \", endTime]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n                children: \"Room:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 20\n              }, this), \" \", program.room]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 15\n          }, this)]\n        }, program.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), selectedLocation && /*#__PURE__*/_jsxDEV(Map, {\n      location: selectedLocation,\n      onClose: () => setSelectedLocation(null)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n};\n_s(Programs, \"pGedlDpRVZiPTL4140bC/BFKe+Y=\");\n_c = Programs;\nexport default Programs;\nvar _c;\n$RefreshReg$(_c, \"Programs\");","map":{"version":3,"names":["React","useState","Map","jsxDEV","_jsxDEV","Programs","programs","onBack","_s","selectedLocation","setSelectedLocation","handleProgramClick","program","location","latitude","longitude","getDateAndTime","datetime","date","fullTime","split","time","slice","children","onClick","className","fileName","_jsxFileName","lineNumber","columnNumber","map","programDate","startTime","start_time","endTime","end_time","title","description","room","id","onClose","_c","$RefreshReg$"],"sources":["/Users/supyaethuya/Desktop/interview-app/src/Programs.js"],"sourcesContent":["// // src/components/Programs.js\n// import React, { useState } from 'react';\n// import Map from './Map';\n// import './App.css';\n\n// const Programs = ({ programs, onBack }) => {\n//   const [selectedLocation, setSelectedLocation] = useState(null);\n\n//   // Handler when a program is clicked – opens the map modal using its location data\n//   const handleProgramClick = (program) => {\n//     if (program.location && program.location.latitude && program.location.longitude) {\n//       setSelectedLocation(program.location);\n//     }\n//   };\n\n//   return (\n//     <div>\n//       <button onClick={onBack} className=\"back-button\">Back to Topics</button>\n//       <div className=\"programs-container\">\n//         {programs.map(program => (\n//           <div \n//             className=\"program-card\" \n//             key={program.id} \n//             onClick={() => handleProgramClick(program)}\n//           >\n//             {program.cover_image && (\n//               <img src={program.cover_image} alt={program.title} className=\"program-image\" />\n//             )}\n//             <h3>{program.title}</h3>\n//             <p>{program.description}</p>\n//             <p><strong>Time:</strong> {program.start_time} - {program.end_time}</p>\n//             <p><strong>Location:</strong> {program.room}</p>\n//           </div>\n//         ))}\n//       </div>\n\n//       {selectedLocation && (\n//         <Map \n//           location={selectedLocation} \n//           onClose={() => setSelectedLocation(null)} \n//         />\n//       )}\n//     </div>\n//   );\n// };\n// src/components/Programs.js\nimport React, { useState } from 'react';\nimport Map from './Map';\nimport './App.css';\n\nconst Programs = ({ programs, onBack }) => {\n  const [selectedLocation, setSelectedLocation] = useState(null);\n\n  const handleProgramClick = (program) => {\n    if (program.location && program.location.latitude && program.location.longitude) {\n      setSelectedLocation(program.location);\n    }\n  };\n\n  // Helper function to split a datetime string (\"YYYY-MM-DDTHH:MM:SS\")\n  // into { date: \"YYYY-MM-DD\", time: \"HH:MM\" }\n  const getDateAndTime = (datetime) => {\n    const [date, fullTime] = datetime.split('T');\n    const time = fullTime.slice(0, 5); // \"HH:MM\"\n    return { date, time };\n  };\n\n  return (\n    <div>\n      <button onClick={onBack} className=\"back-button\">Back to Topics</button>\n      \n      <div className=\"programs-container\">\n        {programs.map((program) => {\n          // Extract date and time from start_time and end_time.\n          // Since the date is the same, we only need one date.\n          const { date: programDate, time: startTime } = getDateAndTime(program.start_time);\n          const { time: endTime } = getDateAndTime(program.end_time);\n          \n          return (\n            <div\n              className=\"program-card\"\n              key={program.id}\n              onClick={() => handleProgramClick(program)}\n            >\n              <div className=\"program-text\">\n                <h3>{program.title}</h3>\n                <p>{program.description}</p>\n              </div>\n              <div className=\"program-info\">\n                <p><strong>Date:</strong> {programDate}</p>\n                <p>\n                  <strong>Time:</strong> {startTime} - {endTime}\n                </p>\n                <p><strong>Room:</strong> {program.room}</p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n\n      {selectedLocation && (\n        <Map\n          location={selectedLocation}\n          onClose={() => setSelectedLocation(null)}\n        />\n      )}\n    </div>\n  );\n};\n\nexport default Programs;\n"],"mappings":";;AAAA;AACA;AACA;AACA;;AAEA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,GAAG,MAAM,OAAO;AACvB,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,QAAQ,GAAGA,CAAC;EAAEC,QAAQ;EAAEC;AAAO,CAAC,KAAK;EAAAC,EAAA;EACzC,MAAM,CAACC,gBAAgB,EAAEC,mBAAmB,CAAC,GAAGT,QAAQ,CAAC,IAAI,CAAC;EAE9D,MAAMU,kBAAkB,GAAIC,OAAO,IAAK;IACtC,IAAIA,OAAO,CAACC,QAAQ,IAAID,OAAO,CAACC,QAAQ,CAACC,QAAQ,IAAIF,OAAO,CAACC,QAAQ,CAACE,SAAS,EAAE;MAC/EL,mBAAmB,CAACE,OAAO,CAACC,QAAQ,CAAC;IACvC;EACF,CAAC;;EAED;EACA;EACA,MAAMG,cAAc,GAAIC,QAAQ,IAAK;IACnC,MAAM,CAACC,IAAI,EAAEC,QAAQ,CAAC,GAAGF,QAAQ,CAACG,KAAK,CAAC,GAAG,CAAC;IAC5C,MAAMC,IAAI,GAAGF,QAAQ,CAACG,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;IACnC,OAAO;MAAEJ,IAAI;MAAEG;IAAK,CAAC;EACvB,CAAC;EAED,oBACEjB,OAAA;IAAAmB,QAAA,gBACEnB,OAAA;MAAQoB,OAAO,EAAEjB,MAAO;MAACkB,SAAS,EAAC,aAAa;MAAAF,QAAA,EAAC;IAAc;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eAExEzB,OAAA;MAAKqB,SAAS,EAAC,oBAAoB;MAAAF,QAAA,EAChCjB,QAAQ,CAACwB,GAAG,CAAElB,OAAO,IAAK;QACzB;QACA;QACA,MAAM;UAAEM,IAAI,EAAEa,WAAW;UAAEV,IAAI,EAAEW;QAAU,CAAC,GAAGhB,cAAc,CAACJ,OAAO,CAACqB,UAAU,CAAC;QACjF,MAAM;UAAEZ,IAAI,EAAEa;QAAQ,CAAC,GAAGlB,cAAc,CAACJ,OAAO,CAACuB,QAAQ,CAAC;QAE1D,oBACE/B,OAAA;UACEqB,SAAS,EAAC,cAAc;UAExBD,OAAO,EAAEA,CAAA,KAAMb,kBAAkB,CAACC,OAAO,CAAE;UAAAW,QAAA,gBAE3CnB,OAAA;YAAKqB,SAAS,EAAC,cAAc;YAAAF,QAAA,gBAC3BnB,OAAA;cAAAmB,QAAA,EAAKX,OAAO,CAACwB;YAAK;cAAAV,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAK,CAAC,eACxBzB,OAAA;cAAAmB,QAAA,EAAIX,OAAO,CAACyB;YAAW;cAAAX,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzB,CAAC,eACNzB,OAAA;YAAKqB,SAAS,EAAC,cAAc;YAAAF,QAAA,gBAC3BnB,OAAA;cAAAmB,QAAA,gBAAGnB,OAAA;gBAAAmB,QAAA,EAAQ;cAAK;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACE,WAAW;YAAA;cAAAL,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC,eAC3CzB,OAAA;cAAAmB,QAAA,gBACEnB,OAAA;gBAAAmB,QAAA,EAAQ;cAAK;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACG,SAAS,EAAC,KAAG,EAACE,OAAO;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAC5C,CAAC,eACJzB,OAAA;cAAAmB,QAAA,gBAAGnB,OAAA;gBAAAmB,QAAA,EAAQ;cAAK;gBAAAG,QAAA,EAAAC,YAAA;gBAAAC,UAAA;gBAAAC,YAAA;cAAA,OAAQ,CAAC,KAAC,EAACjB,OAAO,CAAC0B,IAAI;YAAA;cAAAZ,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAI,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACzC,CAAC;QAAA,GAbDjB,OAAO,CAAC2B,EAAE;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAcZ,CAAC;MAEV,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,EAELpB,gBAAgB,iBACfL,OAAA,CAACF,GAAG;MACFW,QAAQ,EAAEJ,gBAAiB;MAC3B+B,OAAO,EAAEA,CAAA,KAAM9B,mBAAmB,CAAC,IAAI;IAAE;MAAAgB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1C,CACF;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACE,CAAC;AAEV,CAAC;AAACrB,EAAA,CA1DIH,QAAQ;AAAAoC,EAAA,GAARpC,QAAQ;AA4Dd,eAAeA,QAAQ;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}